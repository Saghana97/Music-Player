{"ast":null,"code":"import _classCallCheck from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/saghana/Desktop/musicalbum/src/components/AlbumContent/AlbumContent.js\";\nimport React, { Component } from \"react\";\nimport \"./AlbumContent.css\";\nimport { Dialog } from \"@material-ui/core\"; //import AudioPlayer from \"../AudioPlayer/AudioPlayer\";\n//zimport data from \"../../helpers/data\";\n//converting the file uploaded to a base 64 format\n\nvar getBase64 = function getBase64(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      return resolve(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      return reject(error);\n    };\n\n    reader.readAsDataURL(file);\n  });\n};\n\nvar AlbumContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AlbumContent, _Component);\n\n  _createClass(AlbumContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }]);\n\n  function AlbumContent(props) {\n    var _this;\n\n    _classCallCheck(this, AlbumContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlbumContent).call(this, props));\n\n    _this.adding = function () {\n      _this.setState({\n        modalOpen: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        modalOpen: false\n      });\n    };\n\n    _this.getName = function (e) {\n      _this.setState({\n        song_name: e.target.value\n      });\n    };\n\n    _this.getArtist = function (e) {\n      _this.setState({\n        artist_name: e.target.value\n      });\n    };\n\n    _this.addSong = function (e) {\n      var file = e.target.files[0];\n      getBase64(file).then(function (base64) {\n        _this.setState({\n          song: base64\n        });\n      });\n    };\n\n    _this.addEditData = function (e) {\n      if (_this.state.song_name) {\n        data[_this.state.editIndex].song_name = _this.state.song_name;\n      }\n\n      if (_this.state.album_image) {\n        data[_this.state.editIndex].artist_name = _this.state.artist_name;\n      }\n\n      if (_this.state.song) {\n        data[_this.state.editIndex].song = _this.state.song;\n      }\n\n      _this.setState({\n        song_name: \"\",\n        artist_name: \"\",\n        song: \"\"\n      });\n\n      _this.setState({\n        editStatus: false\n      });\n    };\n\n    _this.deleteSong = function (index, e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.props.songs.splice(index, 1);\n\n      _this.setState({\n        modalOpen: true\n      });\n\n      _this.setState({\n        modalOpen: false\n      });\n    };\n\n    _this.playSong = function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      _this.setState({\n        play: true\n      });\n    };\n\n    _this.addToData = function () {\n      var _this$state = _this.state,\n          song_name = _this$state.song_name,\n          artist_name = _this$state.artist_name,\n          song = _this$state.song;\n\n      _this.props.songs.push({\n        song_name: song_name,\n        artist_name: artist_name,\n        song: song\n      });\n\n      _this.setState({\n        modalOpen: false\n      });\n    };\n\n    _this.addToQueue = function (e, index) {\n      e.stopPropagation();\n      e.preventDefault(); // console.log(index);\n\n      if (_this.props.data[_this.props.albumIndex].songs[index].song) {\n        _this.props.queue.push(_this.props.data[_this.props.albumIndex].songs[index].song);\n\n        if (_this.props.data[_this.props.albumIndex].songs[index].song_name) {\n          _this.props.queueSongName.push(_this.props.data[_this.props.albumIndex].songs[index].song_name);\n\n          _this.props.artistName.push(_this.props.data[_this.props.albumIndex].songs[index].artist_name); // console.log(this.props.queue);\n\n        }\n\n        _this.props.coverImage.push(_this.props.data[_this.props.albumIndex].album_image);\n\n        if (_this.props.queue.length > 0) {\n          _this.setState({\n            play: true\n          });\n        }\n      }\n    };\n\n    _this.addAlbumToQueue = function (e, index) {\n      console.log(_this.props);\n\n      for (var i = 0; i < _this.props.data[index].songs.length; i++) {\n        if (_this.props.data[index].songs[i].song && _this.props.data[index].songs[i].song_name && _this.props.data[index].songs[i].artist_name) {\n          _this.props.queue.push(_this.props.data[index].songs[i].song);\n\n          _this.props.queueSongName.push(_this.props.data[index].songs[i].song_name);\n\n          _this.props.artistName.push(_this.props.data[index].songs[i].artist_name);\n\n          _this.props.coverImage.push(_this.props.data[index].album_image);\n        }\n      }\n\n      if (_this.props.queue.length > 0) {\n        _this.setState({\n          play: true\n        });\n      }\n    };\n\n    _this.editsong = function (e, index) {\n      //console.log(index, \"index\");\n      _this.setState({\n        editIndex: index\n      });\n\n      _this.setState({\n        editStatus: true\n      });\n\n      _this.setState({\n        editIndex: index\n      });\n    };\n\n    _this.handleEditClose = function () {\n      _this.setState({\n        editStatus: false\n      });\n    };\n\n    _this.state = {\n      modalOpen: false,\n      song_name: \"\",\n      artist_name: \"\",\n      song: \"\",\n      play: false,\n      queue: [],\n      editStatus: false,\n      editIndex: \"\"\n    };\n    return _this;\n  } //function to add the songs\n\n\n  _createClass(AlbumContent, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {} // console.log(this.props.data);\n    //add the song name,artist and song to data\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"add-songs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.adding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Add Songs\"), this.props.queue.length > 0 && React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.addAlbumToQueue(e, _this2.props.albumIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \" \", \"Add All Songs to Queue\", \" \"), React.createElement(Dialog, {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        className: \"form-dialog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"song_name\",\n        className: \"input\",\n        placeholder: \"Song Name\",\n        onChange: this.getName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"artist_name\",\n        className: \"input\",\n        placeholder: \"Artist Name\",\n        onChange: this.getArtist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \" Upload the song\"), React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: this.addSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"add-song-button\",\n        onClick: this.addToData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \" \", \"Add\", \" \"))))), React.createElement(\"div\", {\n        className: \"songs-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, this.props.songs && this.props.songs.map(function (item, index) {\n        return React.createElement(\"div\", {\n          className: \"song\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"song-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"classForSong\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, item.song_name, \" \"), \" \", React.createElement(\"span\", {\n          className: \"artist\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, item.artist_name, \" \")), React.createElement(\"button\", {\n          className: \"delete_song\",\n          onClick: function onClick(e) {\n            return _this2.deleteSong(index, e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, \" \", \"X\", \" \"), React.createElement(\"button\", {\n          className: \"edit_song\",\n          onClick: function onClick(e) {\n            return _this2.editsong(index, e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \"\", \"Edit\", \"\"), React.createElement(\"button\", {\n          className: \"queue_button\",\n          onClick: function onClick(e) {\n            return _this2.addToQueue(e, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \"+ queue\", \" \")));\n      })));\n    }\n  }]);\n\n  return AlbumContent;\n}(Component);\n\nexport default AlbumContent;","map":{"version":3,"sources":["/home/saghana/Desktop/musicalbum/src/components/AlbumContent/AlbumContent.js"],"names":["React","Component","Dialog","getBase64","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","AlbumContent","props","adding","setState","modalOpen","handleClose","getName","e","song_name","target","value","getArtist","artist_name","addSong","files","then","base64","song","addEditData","state","data","editIndex","album_image","editStatus","deleteSong","index","preventDefault","stopPropagation","songs","splice","playSong","play","addToData","push","addToQueue","albumIndex","queue","queueSongName","artistName","coverImage","length","addAlbumToQueue","console","log","i","editsong","handleEditClose","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./AlbumContent.css\";\nimport { Dialog } from \"@material-ui/core\";\n//import AudioPlayer from \"../AudioPlayer/AudioPlayer\";\n//zimport data from \"../../helpers/data\";\n//converting the file uploaded to a base 64 format\nconst getBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n    reader.readAsDataURL(file);\n  });\n};\n\nclass AlbumContent extends Component {\n  componentDidMount() {}\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      song_name: \"\",\n      artist_name: \"\",\n      song: \"\",\n      play: false,\n      queue: [],\n      editStatus: false,\n      editIndex: \"\"\n    };\n  }\n  //function to add the songs\n  adding = () => {\n    this.setState({ modalOpen: true });\n  };\n  //function to close\n  handleClose = () => {\n    this.setState({ modalOpen: false });\n  };\n  //function to set the song name with a value\n  getName = e => {\n    this.setState({ song_name: e.target.value });\n  };\n  //function to get the artist name\n  getArtist = e => {\n    this.setState({ artist_name: e.target.value });\n  };\n  //add the song in the base64 format\n  addSong = e => {\n    const file = e.target.files[0];\n    getBase64(file).then(base64 => {\n      this.setState({ song: base64 });\n    });\n  };\n\n\n  addEditData = e => {\n    if (this.state.song_name) {\n      data[this.state.editIndex].song_name = this.state.song_name;\n    }\n    if (this.state.album_image) {\n      data[this.state.editIndex].artist_name = this.state.artist_name;\n    }\n    if(this.state.song){\n      data[this.state.editIndex].song=this.state.song;\n    }\n    this.setState({\n      song_name: \"\",\n      artist_name: \"\",\n      song:\"\"\n    });\n    this.setState({ editStatus: false });\n  };\n  //function to delete the song\n  deleteSong = (index, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.songs.splice(index, 1);\n    this.setState({ modalOpen: true });\n    this.setState({ modalOpen: false });\n  };\n  //function to play the song\n  playSong = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState({ play: true });\n  };\n\n  componentDidUpdate() {\n    // console.log(this.props.data);\n  }\n  //add the song name,artist and song to data\n  addToData = () => {\n    const { song_name, artist_name, song } = this.state;\n    this.props.songs.push({\n      song_name: song_name,\n      artist_name: artist_name,\n      song: song\n    });\n    this.setState({ modalOpen: false });\n  };\n  //adding the songs to a queue\n  addToQueue = (e, index) => {\n    e.stopPropagation();\n    e.preventDefault();\n    // console.log(index);\n    if (this.props.data[this.props.albumIndex].songs[index].song) {\n      this.props.queue.push(\n        this.props.data[this.props.albumIndex].songs[index].song\n      );\n      if (this.props.data[this.props.albumIndex].songs[index].song_name) {\n        this.props.queueSongName.push(\n          this.props.data[this.props.albumIndex].songs[index].song_name\n        );\n        this.props.artistName.push(\n          this.props.data[this.props.albumIndex].songs[index].artist_name\n        );\n        // console.log(this.props.queue);\n      }\n      this.props.coverImage.push(\n        this.props.data[this.props.albumIndex].album_image\n      );\n\n      if (this.props.queue.length > 0) {\n        this.setState({ play: true });\n      }\n    }\n  };\n  //add the albums to the queue\n  addAlbumToQueue = (e, index) => {\n    console.log(this.props);\n    for (var i = 0; i < this.props.data[index].songs.length; i++) {\n      if (\n        this.props.data[index].songs[i].song &&\n        this.props.data[index].songs[i].song_name &&\n        this.props.data[index].songs[i].artist_name\n      ) {\n        this.props.queue.push(this.props.data[index].songs[i].song);\n        this.props.queueSongName.push(\n          this.props.data[index].songs[i].song_name\n        );\n        this.props.artistName.push(this.props.data[index].songs[i].artist_name);\n        this.props.coverImage.push(this.props.data[index].album_image);\n      }\n    }\n    if (this.props.queue.length > 0) {\n      this.setState({ play: true });\n    }\n  };\n    editsong = (e, index) => {\n    //console.log(index, \"index\");\n    this.setState({ editIndex: index });\n    this.setState({ editStatus: true });\n    this.setState({ editIndex: index });\n  };\n\n  handleEditClose = () => {\n    this.setState({ editStatus: false });\n  };\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"add-songs\">\n          <br />\n          <button onClick={this.adding}>Add Songs</button>\n          {this.props.queue.length > 0 && (\n            <button\n              onClick={e => this.addAlbumToQueue(e, this.props.albumIndex)}\n            >\n              {\" \"}\n              Add All Songs to Queue{\" \"}\n            </button>\n          )}\n          {/* <input type=\"file\" multiple accept=\"audio/*\" onChange={this.addSong} />  */}\n          <Dialog\n            open={this.state.modalOpen}\n            onClose={this.handleClose}\n            className=\"form-dialog\"\n          >\n            <div className=\"form\">\n              <input\n                type=\"text\"\n                id=\"song_name\"\n                className=\"input\"\n                placeholder=\"Song Name\"\n                onChange={this.getName}\n              />{\" \"}\n              <br />\n              <input\n                type=\"text\"\n                id=\"artist_name\"\n                className=\"input\"\n                placeholder=\"Artist Name\"\n                onChange={this.getArtist}\n              />{\" \"}\n              <br />\n              <p> Upload the song</p>\n              <input type=\"file\" accept=\"audio/*\" onChange={this.addSong} />\n              <div className=\"button\">\n                <button className=\"add-song-button\" onClick={this.addToData}>\n                  {\" \"}\n                  Add{\" \"}\n                </button>\n              </div>\n            </div>\n          </Dialog>\n        </div>\n        <div className=\"songs-list\">\n          {this.props.songs &&\n            this.props.songs.map((item, index) => (\n              <div className=\"song\" key={index}>\n                <div className=\"song-name\">\n                  <div className=\"classForSong\">\n                    <span className=\"text\">{item.song_name} </span>{\" \"}\n                    <span className=\"artist\">{item.artist_name} </span>\n                  </div>\n                  <button\n                    className=\"delete_song\"\n                    onClick={e => this.deleteSong(index, e)}\n                  >\n                    {\" \"}\n                    X{\" \"}\n                  </button>\n                  <button\n                    className=\"edit_song\"\n                    onClick={e=>this.editsong(index,e)}>\n                  {\"\"}\n                      Edit{\"\"}\n                  </button>\n                  <button\n                    className=\"queue_button\"\n                    onClick={e => this.addToQueue(e, index)}\n                  >\n                    + queue{\" \"}\n                  </button>\n                  {/* <audio controls={this.state.play}> <source src= {item.song} />> </audio> */}\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default AlbumContent;\n"]},"metadata":{},"sourceType":"module"}