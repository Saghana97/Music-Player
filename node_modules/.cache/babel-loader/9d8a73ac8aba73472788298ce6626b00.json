{"ast":null,"code":"import _classCallCheck from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/saghana/Desktop/musicalbum/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/saghana/Desktop/musicalbum/src/components/AlbumContent/AlbumContent.js\";\nimport React, { Component } from \"react\";\nimport \"./AlbumContent.css\";\nimport { Dialog } from \"@material-ui/core\"; //import AudioPlayer from \"../AudioPlayer/AudioPlayer\";\n//zimport data from \"../../helpers/data\";\n//converting the file uploaded to a base 64 format\n\nvar getBase64 = function getBase64(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      return resolve(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      return reject(error);\n    };\n\n    reader.readAsDataURL(file);\n  });\n};\n\nvar AlbumContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AlbumContent, _Component);\n\n  _createClass(AlbumContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }]);\n\n  function AlbumContent(props) {\n    var _this;\n\n    _classCallCheck(this, AlbumContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlbumContent).call(this, props));\n\n    _this.adding = function () {\n      _this.setState({\n        modalOpen: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        modalOpen: false\n      });\n    };\n\n    _this.editClose = function () {\n      _this.setState({\n        editSong: false\n      });\n    };\n\n    _this.getName = function (e) {\n      _this.setState({\n        song_name: e.target.value\n      });\n    };\n\n    _this.getArtist = function (e) {\n      _this.setState({\n        artist_name: e.target.value\n      });\n    };\n\n    _this.addSong = function (e) {\n      var file = e.target.files[0];\n      getBase64(file).then(function (base64) {\n        _this.setState({\n          song: base64\n        });\n      });\n    };\n\n    _this.deleteSong = function (index, e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.props.songs.splice(index, 1);\n\n      _this.setState({\n        modalOpen: true\n      });\n\n      _this.setState({\n        modalOpen: false\n      });\n    };\n\n    _this.editSong = function (e, index) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      _this.setState({\n        editIndex: index\n      });\n\n      _this.setState({\n        editSong: true\n      });\n    };\n\n    _this.playSong = function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      _this.setState({\n        play: true\n      });\n    };\n\n    _this.addToData = function () {\n      var _this$state = _this.state,\n          song_name = _this$state.song_name,\n          artist_name = _this$state.artist_name,\n          song = _this$state.song;\n\n      _this.props.songs.push({\n        song_name: song_name,\n        artist_name: artist_name,\n        song: song\n      });\n\n      _this.setState({\n        song_name: \"\",\n        artist_name: \"\",\n        song: \"\"\n      });\n\n      _this.setState({\n        modalOpen: false\n      });\n    };\n\n    _this.editComplete = function (e) {\n      var _this$state2 = _this.state,\n          song_name = _this$state2.song_name,\n          artist_name = _this$state2.artist_name,\n          song = _this$state2.song,\n          editIndex = _this$state2.editIndex;\n      if (song_name) _this.props.songs[editIndex].song_name = song_name;\n      if (artist_name) _this.props.songs[editIndex].artist_name = artist_name;\n      if (_this.song) _this.props.songs[editIndex].song = song;\n\n      _this.setState({\n        editSong: false\n      });\n    };\n\n    _this.addToQueue = function (e, index) {\n      e.stopPropagation();\n      e.preventDefault(); // console.log(index);\n\n      if (_this.props.data[_this.props.albumIndex].songs[index].song) {\n        _this.props.queue.push(_this.props.data[_this.props.albumIndex].songs[index].song);\n\n        if (_this.props.data[_this.props.albumIndex].songs[index].song_name) {\n          _this.props.queueSongName.push(_this.props.data[_this.props.albumIndex].songs[index].song_name);\n\n          _this.props.artistName.push(_this.props.data[_this.props.albumIndex].songs[index].artist_name); // console.log(this.props.queue);\n\n        }\n\n        _this.props.coverImage.push(_this.props.data[_this.props.albumIndex].album_image);\n\n        if (_this.props.queue.length > 0) {\n          _this.setState({\n            play: true\n          });\n        }\n      }\n    };\n\n    _this.addAlbumToQueue = function (e, index) {\n      console.log(_this.props);\n\n      for (var i = 0; i < _this.props.data[index].songs.length; i++) {\n        if (_this.props.data[index].songs[i].song && _this.props.data[index].songs[i].song_name && _this.props.data[index].songs[i].artist_name) {\n          _this.props.queue.push(_this.props.data[index].songs[i].song);\n\n          _this.props.queueSongName.push(_this.props.data[index].songs[i].song_name);\n\n          _this.props.artistName.push(_this.props.data[index].songs[i].artist_name);\n\n          _this.props.coverImage.push(_this.props.data[index].album_image);\n        }\n      }\n\n      if (_this.props.queue.length > 0) {\n        _this.setState({\n          play: true\n        });\n      }\n    };\n\n    _this.state = {\n      modalOpen: false,\n      song_name: \"\",\n      artist_name: \"\",\n      song: \"\",\n      play: false,\n      queue: [],\n      editSong: false,\n      editIndex: \"\"\n    };\n    return _this;\n  } //function to add the songs\n\n\n  _createClass(AlbumContent, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {} // console.log(this.props.data);\n    //add the song name,artist and song to data\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"add-songs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.adding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Add Songs\"), this.props.queue.length > 0 && React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.addAlbumToQueue(e, _this2.props.albumIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \" \", \"Add All Songs to Queue\", \" \"), React.createElement(Dialog, {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        className: \"form-dialog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"song_name\",\n        className: \"input\",\n        placeholder: \"Song Name\",\n        onChange: this.getName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"artist_name\",\n        className: \"input\",\n        placeholder: \"Artist Name\",\n        onChange: this.getArtist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \" Upload the song\"), React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: this.addSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"add-song-button\",\n        onClick: this.addToData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \" \", \"Add\", \" \")))), React.createElement(Dialog, {\n        open: this.state.editSong,\n        onClose: this.editClose,\n        className: \"form-dialog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"song_name\",\n        className: \"input\",\n        placeholder: \"Song Name\",\n        onChange: this.getName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"artist_name\",\n        className: \"input\",\n        placeholder: \"Artist Name\",\n        onChange: this.getArtist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \" Upload the song\"), React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: this.addSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"add-song-button\",\n        onClick: this.editComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \" \", \"Add\", \" \"))))), React.createElement(\"div\", {\n        className: \"songs-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, this.props.songs && this.props.songs.map(function (item, index) {\n        return React.createElement(\"div\", {\n          className: \"song\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"song-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"classForSong\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, item.song_name, \" \"), \" \", React.createElement(\"span\", {\n          className: \"artist\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, item.artist_name, \" \")), React.createElement(\"button\", {\n          className: \"delete_song\",\n          onClick: function onClick(e) {\n            return _this2.deleteSong(index, e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, \" \", \"X\", \" \"), React.createElement(\"button\", {\n          className: \"queue_button\",\n          onClick: function onClick(e) {\n            return _this2.addToQueue(e, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, \"+ queue\", \" \"), React.createElement(\"button\", {\n          className: \"delete_song\",\n          onClick: function onClick(e) {\n            return _this2.editSong(e, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, \" \", \"Edit\")));\n      })));\n    }\n  }]);\n\n  return AlbumContent;\n}(Component);\n\nexport default AlbumContent;","map":{"version":3,"sources":["/home/saghana/Desktop/musicalbum/src/components/AlbumContent/AlbumContent.js"],"names":["React","Component","Dialog","getBase64","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","AlbumContent","props","adding","setState","modalOpen","handleClose","editClose","editSong","getName","e","song_name","target","value","getArtist","artist_name","addSong","files","then","base64","song","deleteSong","index","preventDefault","stopPropagation","songs","splice","editIndex","playSong","play","addToData","state","push","editComplete","addToQueue","data","albumIndex","queue","queueSongName","artistName","coverImage","album_image","length","addAlbumToQueue","console","log","i","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./AlbumContent.css\";\nimport { Dialog } from \"@material-ui/core\";\n//import AudioPlayer from \"../AudioPlayer/AudioPlayer\";\n//zimport data from \"../../helpers/data\";\n//converting the file uploaded to a base 64 format\nconst getBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n    reader.readAsDataURL(file);\n  });\n};\n\nclass AlbumContent extends Component {\n  componentDidMount() {}\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      song_name: \"\",\n      artist_name: \"\",\n      song: \"\",\n      play: false,\n      queue: [],\n      editSong: false,\n      editIndex: \"\"\n    };\n  }\n  //function to add the songs\n  adding = () => {\n    this.setState({ modalOpen: true });\n  };\n  //function to close\n  handleClose = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  //function to close edit modal\n  editClose = () => {\n    this.setState({ editSong: false });\n  };\n\n  //function to set the song name with a value\n  getName = e => {\n    this.setState({ song_name: e.target.value });\n  };\n  //function to get the artist name\n  getArtist = e => {\n    this.setState({ artist_name: e.target.value });\n  };\n  //add the song in the base64 format\n  addSong = e => {\n    const file = e.target.files[0];\n    getBase64(file).then(base64 => {\n      this.setState({ song: base64 });\n    });\n  };\n\n  //function to delete the song\n  deleteSong = (index, e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.songs.splice(index, 1);\n    this.setState({ modalOpen: true });\n    this.setState({ modalOpen: false });\n  };\n\n  //function to edit song\n  editSong = (e, index) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState({ editIndex: index });\n    this.setState({ editSong: true });\n  };\n\n  //function to play the song\n  playSong = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState({ play: true });\n  };\n\n  componentDidUpdate() {\n    // console.log(this.props.data);\n  }\n  //add the song name,artist and song to data\n  addToData = () => {\n    const { song_name, artist_name, song } = this.state;\n    this.props.songs.push({\n      song_name: song_name,\n      artist_name: artist_name,\n      song: song\n    });\n    this.setState({ song_name: \"\", artist_name: \"\", song: \"\" });\n    this.setState({ modalOpen: false });\n  };\n\n  //saving the edited data\n  editComplete = e => {\n    const { song_name, artist_name, song, editIndex } = this.state;\n    if (song_name) this.props.songs[editIndex].song_name = song_name;\n    if (artist_name) this.props.songs[editIndex].artist_name = artist_name;\n    if (this.song) this.props.songs[editIndex].song = song;\n    this.setState({ editSong: false });\n  };\n\n  //adding the songs to a queue\n  addToQueue = (e, index) => {\n    e.stopPropagation();\n    e.preventDefault();\n    // console.log(index);\n    if (this.props.data[this.props.albumIndex].songs[index].song) {\n      this.props.queue.push(\n        this.props.data[this.props.albumIndex].songs[index].song\n      );\n      if (this.props.data[this.props.albumIndex].songs[index].song_name) {\n        this.props.queueSongName.push(\n          this.props.data[this.props.albumIndex].songs[index].song_name\n        );\n        this.props.artistName.push(\n          this.props.data[this.props.albumIndex].songs[index].artist_name\n        );\n        // console.log(this.props.queue);\n      }\n      this.props.coverImage.push(\n        this.props.data[this.props.albumIndex].album_image\n      );\n\n      if (this.props.queue.length > 0) {\n        this.setState({ play: true });\n      }\n    }\n  };\n  //add the albums to the queue\n  addAlbumToQueue = (e, index) => {\n    console.log(this.props);\n    for (var i = 0; i < this.props.data[index].songs.length; i++) {\n      if (\n        this.props.data[index].songs[i].song &&\n        this.props.data[index].songs[i].song_name &&\n        this.props.data[index].songs[i].artist_name\n      ) {\n        this.props.queue.push(this.props.data[index].songs[i].song);\n        this.props.queueSongName.push(\n          this.props.data[index].songs[i].song_name\n        );\n        this.props.artistName.push(this.props.data[index].songs[i].artist_name);\n        this.props.coverImage.push(this.props.data[index].album_image);\n      }\n    }\n    if (this.props.queue.length > 0) {\n      this.setState({ play: true });\n    }\n  };\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <div className=\"add-songs\">\n          <br />\n          <button onClick={this.adding}>Add Songs</button>\n          {this.props.queue.length > 0 && (\n            <button\n              onClick={e => this.addAlbumToQueue(e, this.props.albumIndex)}\n            >\n              {\" \"}\n              Add All Songs to Queue{\" \"}\n            </button>\n          )}\n          {/* <input type=\"file\" multiple accept=\"audio/*\" onChange={this.addSong} />  */}\n          <Dialog\n            open={this.state.modalOpen}\n            onClose={this.handleClose}\n            className=\"form-dialog\"\n          >\n            <div className=\"form\">\n              <input\n                type=\"text\"\n                id=\"song_name\"\n                className=\"input\"\n                placeholder=\"Song Name\"\n                onChange={this.getName}\n              />{\" \"}\n              <br />\n              <input\n                type=\"text\"\n                id=\"artist_name\"\n                className=\"input\"\n                placeholder=\"Artist Name\"\n                onChange={this.getArtist}\n              />{\" \"}\n              <br />\n              <p> Upload the song</p>\n              <input type=\"file\" accept=\"audio/*\" onChange={this.addSong} />\n              <div className=\"button\">\n                <button className=\"add-song-button\" onClick={this.addToData}>\n                  {\" \"}\n                  Add{\" \"}\n                </button>\n              </div>\n            </div>\n          </Dialog>\n          <Dialog\n            open={this.state.editSong}\n            onClose={this.editClose}\n            className=\"form-dialog\"\n          >\n            <div className=\"form\">\n              <input\n                type=\"text\"\n                id=\"song_name\"\n                className=\"input\"\n                placeholder=\"Song Name\"\n                onChange={this.getName}\n              />{\" \"}\n              <br />\n              <input\n                type=\"text\"\n                id=\"artist_name\"\n                className=\"input\"\n                placeholder=\"Artist Name\"\n                onChange={this.getArtist}\n              />{\" \"}\n              <br />\n              <p> Upload the song</p>\n              <input type=\"file\" accept=\"audio/*\" onChange={this.addSong} />\n              <div className=\"button\">\n                <button className=\"add-song-button\" onClick={this.editComplete}>\n                  {\" \"}\n                  Add{\" \"}\n                </button>\n              </div>\n            </div>\n          </Dialog>\n        </div>\n        <div className=\"songs-list\">\n          {this.props.songs &&\n            this.props.songs.map((item, index) => (\n              <div className=\"song\" key={index}>\n                <div className=\"song-name\">\n                  <div className=\"classForSong\">\n                    <span className=\"text\">{item.song_name} </span>{\" \"}\n                    <span className=\"artist\">{item.artist_name} </span>\n                  </div>\n                  <button\n                    className=\"delete_song\"\n                    onClick={e => this.deleteSong(index, e)}\n                  >\n                    {\" \"}\n                    X{\" \"}\n                  </button>\n                  <button\n                    className=\"queue_button\"\n                    onClick={e => this.addToQueue(e, index)}\n                  >\n                    + queue{\" \"}\n                  </button>\n                  <button\n                    className=\"delete_song\"\n                    onClick={e => this.editSong(e, index)}\n                  >\n                    {\" \"}\n                    Edit\n                  </button>\n                  {/* <audio controls={this.state.play}> <source src= {item.song} />> </audio> */}\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\nexport default AlbumContent;\n"]},"metadata":{},"sourceType":"module"}